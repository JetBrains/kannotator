<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="org.omg.IOP.CodecPackage.FormatMismatchHelper org.omg.IOP.CodecPackage.FormatMismatch extract(org.omg.CORBA.Any)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.FormatMismatchHelper org.omg.IOP.CodecPackage.FormatMismatch extract(org.omg.CORBA.Any) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.FormatMismatchHelper org.omg.IOP.CodecPackage.FormatMismatch read(org.omg.CORBA.portable.InputStream)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.FormatMismatchHelper org.omg.IOP.CodecPackage.FormatMismatch read(org.omg.CORBA.portable.InputStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.FormatMismatchHelper void insert(org.omg.CORBA.Any, org.omg.IOP.CodecPackage.FormatMismatch) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.FormatMismatchHelper void write(org.omg.CORBA.portable.OutputStream, org.omg.IOP.CodecPackage.FormatMismatch) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper org.omg.IOP.CodecPackage.InvalidTypeForEncoding extract(org.omg.CORBA.Any)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper org.omg.IOP.CodecPackage.InvalidTypeForEncoding extract(org.omg.CORBA.Any) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper org.omg.IOP.CodecPackage.InvalidTypeForEncoding read(org.omg.CORBA.portable.InputStream)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper org.omg.IOP.CodecPackage.InvalidTypeForEncoding read(org.omg.CORBA.portable.InputStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper void insert(org.omg.CORBA.Any, org.omg.IOP.CodecPackage.InvalidTypeForEncoding) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper void write(org.omg.CORBA.portable.OutputStream, org.omg.IOP.CodecPackage.InvalidTypeForEncoding) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.TypeMismatchHelper org.omg.IOP.CodecPackage.TypeMismatch extract(org.omg.CORBA.Any)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.TypeMismatchHelper org.omg.IOP.CodecPackage.TypeMismatch extract(org.omg.CORBA.Any) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.TypeMismatchHelper org.omg.IOP.CodecPackage.TypeMismatch read(org.omg.CORBA.portable.InputStream)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.TypeMismatchHelper org.omg.IOP.CodecPackage.TypeMismatch read(org.omg.CORBA.portable.InputStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.TypeMismatchHelper void insert(org.omg.CORBA.Any, org.omg.IOP.CodecPackage.TypeMismatch) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="org.omg.IOP.CodecPackage.TypeMismatchHelper void write(org.omg.CORBA.portable.OutputStream, org.omg.IOP.CodecPackage.TypeMismatch) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

