<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="java.sql.Array java.lang.Object getArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Array java.lang.Object getArray(java.util.Map&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Array java.lang.Object getArray(long, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Array java.lang.Object getArray(long, int, java.util.Map&lt;java.lang.String,java.lang.Class&lt;?&gt;&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Blob byte[] getBytes(long, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Blob int setBytes(long, byte[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Blob int setBytes(long, byte[], int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Blob java.io.InputStream getBinaryStream()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Blob long position(java.sql.Blob, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.ClientInfoStatus java.sql.ClientInfoStatus valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Clob int setString(long, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Clob int setString(long, java.lang.String, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Clob java.io.Reader getCharacterStream()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Clob java.lang.String getSubString(long, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Clob long position(java.sql.Clob, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Date java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Date java.sql.Date valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Date java.sql.Date valueOf(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.util.Properties)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.util.Properties) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Driver getDriver(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.sql.Driver getDriver(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager java.util.Enumeration&lt;java.sql.Driver&gt; getDrivers()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.DriverManager void registerDriver(java.sql.Driver) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.PreparedStatement java.sql.ResultSet executeQuery()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.PseudoColumnUsage java.sql.PseudoColumnUsage valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.ResultSet java.sql.ResultSetMetaData getMetaData()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.ResultSetMetaData java.lang.String getColumnClassName(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.RowIdLifetime java.sql.RowIdLifetime valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.SQLException java.util.Iterator&lt;java.lang.Throwable&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Statement int executeUpdate(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Statement java.sql.ResultSet executeQuery(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Statement java.sql.ResultSet executeQuery(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Time java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Time java.sql.Time valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Time java.sql.Time valueOf(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp boolean after(java.sql.Timestamp) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp boolean before(java.sql.Timestamp) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp int compareTo(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp int compareTo(java.sql.Timestamp) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp int compareTo(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp java.sql.Timestamp valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Timestamp java.sql.Timestamp valueOf(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Wrapper T unwrap(java.lang.Class&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.sql.Wrapper boolean isWrapperFor(java.lang.Class&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

