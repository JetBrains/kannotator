<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="java.beans.BeanDescriptor BeanDescriptor(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans boolean isInstanceOf(java.lang.Object, java.lang.Class&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans java.lang.Object instantiate(java.lang.ClassLoader, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans java.lang.Object instantiate(java.lang.ClassLoader, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans java.lang.Object instantiate(java.lang.ClassLoader, java.lang.String, java.beans.beancontext.BeanContext)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans java.lang.Object instantiate(java.lang.ClassLoader, java.lang.String, java.beans.beancontext.BeanContext) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans java.lang.Object instantiate(java.lang.ClassLoader, java.lang.String, java.beans.beancontext.BeanContext, java.beans.AppletInitializer)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Beans java.lang.Object instantiate(java.lang.ClassLoader, java.lang.String, java.beans.beancontext.BeanContext, java.beans.AppletInitializer) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate boolean mutatesTo(java.lang.Object, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate java.beans.Expression instantiate(java.lang.Object, java.beans.Encoder)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate java.beans.Expression instantiate(java.lang.Object, java.beans.Encoder) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.DefaultPersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Encoder java.beans.PersistenceDelegate getPersistenceDelegate(java.lang.Class&lt;?&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Encoder void writeStatement(java.beans.Statement) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler EventHandler(java.lang.Object, java.lang.String, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler EventHandler(java.lang.Object, java.lang.String, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler T create(java.lang.Class&lt;T&gt;, java.lang.Object, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler T create(java.lang.Class&lt;T&gt;, java.lang.Object, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler T create(java.lang.Class&lt;T&gt;, java.lang.Object, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler T create(java.lang.Class&lt;T&gt;, java.lang.Object, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler T create(java.lang.Class&lt;T&gt;, java.lang.Object, java.lang.String, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler T create(java.lang.Class&lt;T&gt;, java.lang.Object, java.lang.String, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventHandler java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventSetDescriptor EventSetDescriptor(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventSetDescriptor EventSetDescriptor(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String[], java.lang.String, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventSetDescriptor EventSetDescriptor(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String[], java.lang.String, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventSetDescriptor EventSetDescriptor(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String[], java.lang.String, java.lang.String, java.lang.String) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.EventSetDescriptor EventSetDescriptor(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String[], java.lang.String, java.lang.String, java.lang.String) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Expression java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.FeatureDescriptor java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.FeatureDescriptor java.util.Enumeration&lt;java.lang.String&gt; attributeNames()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.FeatureDescriptor void setValue(java.lang.String, java.lang.Object) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Introspector java.beans.BeanInfo getBeanInfo(java.lang.Class&lt;?&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Introspector java.beans.BeanInfo getBeanInfo(java.lang.Class&lt;?&gt;, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Introspector java.beans.BeanInfo getBeanInfo(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Introspector java.beans.BeanInfo getBeanInfo(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Introspector void flushFromCaches(java.lang.Class&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.MethodDescriptor MethodDescriptor(java.lang.reflect.Method, java.beans.ParameterDescriptor[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate boolean mutatesTo(java.lang.Object, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate java.beans.Expression instantiate(java.lang.Object, java.beans.Encoder) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate void initialize(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.Object, java.beans.Encoder) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PersistenceDelegate void writeObject(java.lang.Object, java.beans.Encoder) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyChangeEvent java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyChangeListener void propertyChange(java.beans.PropertyChangeEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyChangeListenerProxy void propertyChange(java.beans.PropertyChangeEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyChangeSupport PropertyChangeSupport(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyChangeSupport void firePropertyChange(java.beans.PropertyChangeEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyDescriptor PropertyDescriptor(java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyDescriptor PropertyDescriptor(java.lang.String, java.lang.Class&lt;?&gt;, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyDescriptor PropertyDescriptor(java.lang.String, java.lang.reflect.Method, java.lang.reflect.Method) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyEditor java.lang.String getJavaInitializationString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyEditor void setValue(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyEditorSupport PropertyEditorSupport(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyEditorSupport java.lang.String getJavaInitializationString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.PropertyEditorSupport void setValue(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.Statement java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.VetoableChangeListener void vetoableChange(java.beans.PropertyChangeEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.VetoableChangeListenerProxy void vetoableChange(java.beans.PropertyChangeEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.VetoableChangeSupport VetoableChangeSupport(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.VetoableChangeSupport void fireVetoableChange(java.beans.PropertyChangeEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.XMLDecoder org.xml.sax.helpers.DefaultHandler createHandler(java.lang.Object, java.beans.ExceptionListener, java.lang.ClassLoader)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.XMLEncoder XMLEncoder(java.io.OutputStream, java.lang.String, boolean, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.XMLEncoder XMLEncoder(java.io.OutputStream, java.lang.String, boolean, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.beans.XMLEncoder void writeStatement(java.beans.Statement) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

