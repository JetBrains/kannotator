<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="java.awt.font.FontRenderContext java.awt.geom.AffineTransform getTransform()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GlyphMetrics GlyphMetrics(boolean, float, float, java.awt.geom.Rectangle2D, byte) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GlyphMetrics GlyphMetrics(float, java.awt.geom.Rectangle2D, byte) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GlyphMetrics java.awt.geom.Rectangle2D getBounds2D()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GlyphVector int[] getGlyphCharIndices(int, int, int[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GlyphVector java.awt.Rectangle getGlyphPixelBounds(int, java.awt.font.FontRenderContext, float, float)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GlyphVector java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GraphicAttribute java.awt.font.GlyphJustificationInfo getJustificationInfo()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GraphicAttribute java.awt.geom.Rectangle2D getBounds()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.GraphicAttribute void draw(java.awt.Graphics2D, float, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.ImageGraphicAttribute ImageGraphicAttribute(java.awt.Image, int, float, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.ImageGraphicAttribute java.awt.geom.Rectangle2D getBounds()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.ImageGraphicAttribute void draw(java.awt.Graphics2D, float, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.LineBreakMeasurer LineBreakMeasurer(java.text.AttributedCharacterIterator, java.text.BreakIterator, java.awt.font.FontRenderContext) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.LineBreakMeasurer void deleteChar(java.text.AttributedCharacterIterator, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.LineBreakMeasurer void insertChar(java.text.AttributedCharacterIterator, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;, java.awt.font.NumericShaper.Range)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;, java.awt.font.NumericShaper.Range) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getShaper(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getShaper(java.awt.font.NumericShaper.Range)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.awt.font.NumericShaper getShaper(java.awt.font.NumericShaper.Range) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper void shape(char[], int, int, java.awt.font.NumericShaper.Range) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.NumericShaper.Range java.awt.font.NumericShaper.Range valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.ShapeGraphicAttribute java.awt.geom.Rectangle2D getBounds()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.ShapeGraphicAttribute void draw(java.awt.Graphics2D, float, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextAttribute java.lang.Object readResolve()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.awt.font.TextHitInfo afterOffset(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.awt.font.TextHitInfo beforeOffset(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.awt.font.TextHitInfo getOffsetHit(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.awt.font.TextHitInfo getOtherHit()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.awt.font.TextHitInfo leading(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.awt.font.TextHitInfo trailing(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextHitInfo java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout TextLayout(java.lang.String, java.awt.Font, java.awt.font.FontRenderContext) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout TextLayout(java.lang.String, java.awt.Font, java.awt.font.FontRenderContext) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout TextLayout(java.lang.String, java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, java.awt.font.FontRenderContext) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout TextLayout(java.lang.String, java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, java.awt.font.FontRenderContext) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout TextLayout(java.text.AttributedCharacterIterator, java.awt.font.FontRenderContext) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout float[] getBaselineOffsets()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout float[] getCaretInfo(java.awt.font.TextHitInfo)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout float[] getCaretInfo(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout int[] getLogicalRangesForVisualSelection(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape getCaretShape(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape getLogicalHighlightShape(int, int, java.awt.geom.Rectangle2D) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout.CaretPolicy)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout.CaretPolicy) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout.CaretPolicy) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo getNextLeftHit(int, java.awt.font.TextLayout.CaretPolicy) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo getNextRightHit(int, java.awt.font.TextLayout.CaretPolicy) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo hitTestChar(float, float)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo hitTestChar(float, float, java.awt.geom.Rectangle2D)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextHitInfo hitTestChar(float, float, java.awt.geom.Rectangle2D) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.font.TextLayout getJustifiedLayout(float)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.awt.geom.Rectangle2D getBounds()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout void draw(java.awt.Graphics2D, float, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout void hitToPoint(java.awt.font.TextHitInfo, java.awt.geom.Point2D) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout void hitToPoint(java.awt.font.TextHitInfo, java.awt.geom.Point2D) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextLayout.CaretPolicy java.awt.font.TextHitInfo getStrongCaret(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.font.TextLayout)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextMeasurer java.awt.font.TextLayout getLayout(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextMeasurer void deleteChar(java.text.AttributedCharacterIterator, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TextMeasurer void insertChar(java.text.AttributedCharacterIterator, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.font.TransformAttribute java.awt.geom.AffineTransform getTransform()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

