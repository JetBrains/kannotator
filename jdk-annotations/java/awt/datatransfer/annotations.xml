<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="java.awt.datatransfer.Clipboard boolean isDataFlavorAvailable(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.Clipboard java.lang.Object getData(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.Class&lt;?&gt;, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String, java.lang.ClassLoader) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor boolean isMimeTypeEqual(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor boolean isMimeTypeEqual(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.io.Reader getReaderForText(java.awt.datatransfer.Transferable)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.io.Reader getReaderForText(java.awt.datatransfer.Transferable) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.Class&lt;?&gt; getDefaultRepresentationClass()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.Class&lt;?&gt; tryToLoadClass(java.lang.String, java.lang.ClassLoader)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.Class&lt;?&gt; tryToLoadClass(java.lang.String, java.lang.ClassLoader) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.Class&lt;?&gt; tryToLoadClass(java.lang.String, java.lang.ClassLoader) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.String getDefaultRepresentationClassAsString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.String getParameter(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor void readExternal(java.io.ObjectInput) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.DataFlavor void writeExternal(java.io.ObjectOutput) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.FlavorMap java.util.Map&lt;java.awt.datatransfer.DataFlavor,java.lang.String&gt; getNativesForFlavors(java.awt.datatransfer.DataFlavor[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.FlavorMap java.util.Map&lt;java.lang.String,java.awt.datatransfer.DataFlavor&gt; getFlavorsForNatives(java.lang.String[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.FlavorTable java.util.List&lt;java.lang.String&gt; getNativesForFlavor(java.awt.datatransfer.DataFlavor)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.StringSelection boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.StringSelection java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap java.awt.datatransfer.FlavorMap getDefaultFlavorMap()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap java.util.List&lt;java.lang.String&gt; getNativesForFlavor(java.awt.datatransfer.DataFlavor)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap java.util.Map&lt;java.awt.datatransfer.DataFlavor,java.lang.String&gt; getNativesForFlavors(java.awt.datatransfer.DataFlavor[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap java.util.Map&lt;java.lang.String,java.awt.datatransfer.DataFlavor&gt; getFlavorsForNatives(java.lang.String[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void addFlavorForUnencodedNative(java.lang.String, java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void addFlavorForUnencodedNative(java.lang.String, java.awt.datatransfer.DataFlavor) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void addUnencodedNativeForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void addUnencodedNativeForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void setFlavorsForNative(java.lang.String, java.awt.datatransfer.DataFlavor[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void setFlavorsForNative(java.lang.String, java.awt.datatransfer.DataFlavor[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void setNativesForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.SystemFlavorMap void setNativesForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.Transferable boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.Transferable java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.awt.datatransfer.Transferable java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

