<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="javax.swing.border.AbstractBorder int getBaseline(java.awt.Component, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(java.awt.Component)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(java.awt.Component) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Insets getBorderInsets(java.awt.Component)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Rectangle getInteriorRectangle(java.awt.Component, int, int, int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder java.awt.Rectangle getInteriorRectangle(java.awt.Component, javax.swing.border.Border, int, int, int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.AbstractBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder BevelBorder(int, java.awt.Color, java.awt.Color) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder BevelBorder(int, java.awt.Color, java.awt.Color) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder void paintLoweredBevel(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.BevelBorder void paintRaisedBevel(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.Border java.awt.Insets getBorderInsets(java.awt.Component)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.Border void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.Border void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.CompoundBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.CompoundBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.CompoundBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.CompoundBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EmptyBorder EmptyBorder(java.awt.Insets) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EmptyBorder java.awt.Insets getBorderInsets()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EmptyBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EmptyBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EmptyBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EmptyBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EtchedBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EtchedBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EtchedBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.EtchedBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.LineBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.LineBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.LineBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.LineBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.MatteBorder java.awt.Insets getBorderInsets()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.MatteBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.MatteBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.MatteBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.MatteBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.SoftBevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.SoftBevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.SoftBevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.SoftBevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.StrokeBorder StrokeBorder(java.awt.BasicStroke, java.awt.Paint) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.StrokeBorder java.awt.BasicStroke getStroke()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.StrokeBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.StrokeBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.StrokeBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.StrokeBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder int getBaseline(java.awt.Component, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(java.awt.Component)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(java.awt.Component) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder java.awt.Dimension getMinimumSize(java.awt.Component)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder java.awt.Font getFont(java.awt.Component)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.border.TitledBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

