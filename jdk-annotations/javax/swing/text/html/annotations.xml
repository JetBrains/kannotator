<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext boolean contains(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.Accessible getAccessibleAt(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.AccessibleComponent getAccessibleComponent()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.AccessibleContext getAccessibleContext()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setBounds(java.awt.Rectangle) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setLocation(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setSize(java.awt.Dimension) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext IconAccessibleContext(javax.swing.text.html.AccessibleHTML.IconElementInfo, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext javax.accessibility.AccessibleIcon[] getAccessibleIcon()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext TableAccessibleContext(javax.swing.text.html.AccessibleHTML.TableElementInfo, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext boolean contains(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext int[] getSelectedAccessibleColumns()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext int[] getSelectedAccessibleRows()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.Accessible getAccessibleAt(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleComponent getAccessibleComponent()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleContext getAccessibleContext()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleTable getAccessibleTable()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setBounds(java.awt.Rectangle) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setLocation(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setSize(java.awt.Dimension) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable int[] getSelectedAccessibleColumns()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable int[] getSelectedAccessibleRows()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext TextAccessibleContext(javax.swing.text.html.AccessibleHTML.TextElementInfo, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext boolean contains(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.Accessible getAccessibleAt(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleComponent getAccessibleComponent()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleContext getAccessibleContext()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleText getAccessibleText()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setBounds(java.awt.Rectangle) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setLocation(java.awt.Point) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setSize(java.awt.Dimension) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.BlockView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.BlockView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.BlockView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.BlockView void paint(java.awt.Graphics, java.awt.Shape) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.BlockView void paint(java.awt.Graphics, java.awt.Shape) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.CSS javax.swing.text.html.CSS.Attribute[] getAllAttributeKeys()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.FormSubmitEvent.MethodType javax.swing.text.html.FormSubmitEvent.MethodType valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.FormView void actionPerformed(java.awt.event.ActionEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.FormView.MouseEventListener void mouseReleased(java.awt.event.MouseEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTML int getIntegerAttributeValue(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Attribute, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTML javax.swing.text.html.HTML.Attribute[] getAllAttributeKeys()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTML javax.swing.text.html.HTML.Tag[] getAllTags()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument javax.swing.text.AbstractDocument.AbstractElement createDefaultRoot()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element createBranchElement(javax.swing.text.Element, javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element createLeafElement(javax.swing.text.Element, javax.swing.text.AttributeSet, int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLDocument.Iterator getIterator(javax.swing.text.html.HTML.Tag) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLEditorKit.ParserCallback getReader(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLEditorKit.ParserCallback getReader(int, int, int, javax.swing.text.html.HTML.Tag)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument void create(javax.swing.text.DefaultStyledDocument.ElementSpec[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument void insertAfterStart(javax.swing.text.Element, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument void insertUpdate(javax.swing.text.AbstractDocument.DefaultDocumentEvent, javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument void processHTMLFrameHyperlinkEvent(javax.swing.text.html.HTMLFrameHyperlinkEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument void setParagraphAttributes(int, int, javax.swing.text.AttributeSet, boolean) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.BlockElement java.lang.String getName()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader void addSpecialElement(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader void preContent(char[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader void registerTag(javax.swing.text.html.HTML.Tag, javax.swing.text.html.HTMLDocument.HTMLReader.TagAction) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.BlockAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.BlockAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.CharacterAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.CharacterAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.FormAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.FormAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HiddenAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HiddenAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.IsindexAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.IsindexAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.ParagraphAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.ParagraphAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.PreAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.PreAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.SpecialAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.SpecialAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLDocument.RunElement java.lang.String getName()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit java.lang.String getContentType()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit javax.swing.Action[] getActions()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit javax.swing.text.Document createDefaultDocument()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit javax.swing.text.ViewFactory getViewFactory()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit javax.swing.text.html.StyleSheet getStyleSheet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void createInputAttributes(javax.swing.text.Element, javax.swing.text.MutableAttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void createInputAttributes(javax.swing.text.Element, javax.swing.text.MutableAttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void deinstall(javax.swing.JEditorPane) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void insertHTML(javax.swing.text.html.HTMLDocument, int, java.lang.String, int, int, javax.swing.text.html.HTML.Tag) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void install(javax.swing.JEditorPane) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void read(java.io.Reader, javax.swing.text.Document, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void read(java.io.Reader, javax.swing.text.Document, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void write(java.io.Writer, javax.swing.text.Document, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit void write(java.io.Writer, javax.swing.text.Document, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory javax.swing.text.View create(javax.swing.text.Element)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory javax.swing.text.View create(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction int elementCountToTag(javax.swing.text.html.HTMLDocument, int, javax.swing.text.html.HTML.Tag) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element findElementMatchingTag(javax.swing.text.html.HTMLDocument, int, javax.swing.text.html.HTML.Tag) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element[] getElementsAt(javax.swing.text.html.HTMLDocument, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element[] getElementsAt(javax.swing.text.html.HTMLDocument, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.html.HTMLDocument getHTMLDocument(javax.swing.JEditorPane)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.html.HTMLDocument getHTMLDocument(javax.swing.JEditorPane) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.html.HTMLEditorKit getHTMLEditorKit(javax.swing.JEditorPane)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.html.HTMLEditorKit getHTMLEditorKit(javax.swing.JEditorPane) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction void actionPerformed(java.awt.event.ActionEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction void insertHTML(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, int, java.lang.String, int, int, javax.swing.text.html.HTML.Tag) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.LinkController void activateLink(int, javax.swing.JEditorPane) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseClicked(java.awt.event.MouseEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseDragged(java.awt.event.MouseEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseMoved(java.awt.event.MouseEvent) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLEditorKit.Parser void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter HTMLWriter(java.io.Writer, javax.swing.text.html.HTMLDocument) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter boolean isBlockTag(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter boolean matchNameAttribute(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter boolean synthesizedElement(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void comment(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void emptyTag(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void endTag(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void output(char[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void selectContent(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void startTag(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void text(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void textAreaContent(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void writeAttributes(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.HTMLWriter void writeOption(javax.swing.text.html.Option) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ImageView int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[]) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ImageView int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[]) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ImageView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ImageView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ImageView void paint(java.awt.Graphics, java.awt.Shape) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ImageView void paint(java.awt.Graphics, java.awt.Shape) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.InlineView javax.swing.text.View breakView(int, int, float, float)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.InlineView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.InlineView void insertUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.InlineView void removeUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ListView void paint(java.awt.Graphics, java.awt.Shape) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ListView void paint(java.awt.Graphics, java.awt.Shape) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ListView void paintChild(java.awt.Graphics, java.awt.Rectangle, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.MinimalHTMLWriter boolean isText(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.MinimalHTMLWriter void text(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.MinimalHTMLWriter void writeAttributes(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.MinimalHTMLWriter void writeContent(javax.swing.text.Element, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.MinimalHTMLWriter void writeLeaf(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.MinimalHTMLWriter void writeStartParagraph(javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ObjectView java.awt.Component createComponent()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.Option Option(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ParagraphView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ParagraphView void paint(java.awt.Graphics, java.awt.Shape) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.ParagraphView void paint(java.awt.Graphics, java.awt.Shape) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet java.awt.Color getBackground(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet java.awt.Color getForeground(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet java.awt.Color getForeground(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet java.awt.Font getFont(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet java.awt.Font getFont(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttribute(javax.swing.text.AttributeSet, java.lang.Object, java.lang.Object)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttribute(javax.swing.text.AttributeSet, java.lang.Object, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet getViewAttributes(javax.swing.text.View)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttribute(javax.swing.text.AttributeSet, java.lang.Object)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttribute(javax.swing.text.AttributeSet, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, java.util.Enumeration&lt;?&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, java.util.Enumeration&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.MutableAttributeSet createLargeAttributeSet(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style getRule(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style getRule(javax.swing.text.html.HTML.Tag, javax.swing.text.Element)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style getRule(javax.swing.text.html.HTML.Tag, javax.swing.text.Element) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.StyleContext.SmallAttributeSet createSmallAttributeSet(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.StyleSheet.BoxPainter getBoxPainter(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.StyleSheet.ListPainter getListPainter(javax.swing.text.AttributeSet)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet void importStyleSheet(java.net.URL) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet.BoxPainter float getInset(int, javax.swing.text.View) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet.BoxPainter void paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View) 5">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.StyleSheet.ListPainter void paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View, int) 5">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.TableView.RowView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.TableView.RowView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.TableView.RowView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.TableView.RowView void layoutMajorAxis(int, int, int[], int[]) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.TableView.RowView void paint(java.awt.Graphics, java.awt.Shape) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.swing.text.html.TableView.RowView void paint(java.awt.Graphics, java.awt.Shape) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

