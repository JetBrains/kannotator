<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="javax.imageio.plugins.jpeg.JPEGHuffmanTable JPEGHuffmanTable(short[], short[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGHuffmanTable JPEGHuffmanTable(short[], short[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGHuffmanTable java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGHuffmanTable short[] getLengths()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGHuffmanTable short[] getValues()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGImageReadParam void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGImageReadParam void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGImageReadParam void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGImageWriteParam void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGImageWriteParam void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGImageWriteParam void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGQTable JPEGQTable(int[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGQTable int[] getTable()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGQTable java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.imageio.plugins.jpeg.JPEGQTable javax.imageio.plugins.jpeg.JPEGQTable getScaledInstance(float, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

