<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="javax.net.ssl.CertPathTrustManagerParameters CertPathTrustManagerParameters(java.security.cert.CertPathParameters) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.HttpsURLConnection void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.HttpsURLConnection void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.HttpsURLConnection void setHostnameVerifier(javax.net.ssl.HostnameVerifier) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.HttpsURLConnection void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyManagerFactory java.lang.String getDefaultAlgorithm()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.security.KeyStore.Builder) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.util.List&lt;java.security.KeyStore.Builder&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.KeyStoreBuilderParameters java.util.List&lt;java.security.KeyStore.Builder&gt; getParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLParameters getDefaultSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLParameters getSupportedSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContext void setDefault(javax.net.ssl.SSLContext) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContextSpi javax.net.ssl.SSLParameters engineGetDefaultSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLContextSpi javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[]) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLParameters getSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngine void setSSLParameters(javax.net.ssl.SSLParameters) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult javax.net.ssl.SSLEngineResult.Status getStatus()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLEngineResult.Status javax.net.ssl.SSLEngineResult.Status valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLServerSocket javax.net.ssl.SSLParameters getSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLServerSocket void setSSLParameters(javax.net.ssl.SSLParameters) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLServerSocketFactory java.lang.String[] getDefaultCipherSuites()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLServerSocketFactory java.lang.String[] getSupportedCipherSuites()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLSocket javax.net.ssl.SSLParameters getSSLParameters()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLSocket void setSSLParameters(javax.net.ssl.SSLParameters) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLSocketFactory java.lang.String[] getDefaultCipherSuites()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.SSLSocketFactory java.lang.String[] getSupportedCipherSuites()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.TrustManagerFactory java.lang.String getDefaultAlgorithm()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

