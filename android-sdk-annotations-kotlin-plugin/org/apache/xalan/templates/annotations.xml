<root>
    <item name='org.apache.xalan.templates.ElemForEach org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext, java.util.Vector, org.apache.xml.dtm.DTMIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperties(org.apache.xml.utils.QName, java.util.Vector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyImport java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable createLocalPseudoVarDecl(org.apache.xml.utils.QName, org.apache.xalan.templates.ElemTemplateElement, org.apache.xpath.axes.LocPathIterator) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet void setNonXslTopLevel(org.apache.xml.utils.QName, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_CDATA_SECTION_ELEMENTS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_MINUSSIGN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties int getIntProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartSimple void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemTemplateElement findCommonAncestor(org.apache.xalan.templates.RedundentExprEliminator.MultistepExprHolder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCallTemplate void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties org.apache.xml.utils.QName getQNameProperty(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_COPYTYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.NodeList getChildNodes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CSSSTYLECONVERSION_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_MULTI'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_STANDALONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xpath.axes.LocPathIterator changePartToRef(org.apache.xml.utils.QName, org.apache.xpath.axes.WalkingIterator, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_INDENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExsltFunction void execute(org.apache.xalan.transformer.TransformerImpl, org.apache.xpath.objects.XObject[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult boolean accept(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_CASEORDER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.KeyDeclaration void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemIf java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ROOT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.Node appendChild(org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable createLocalPseudoVarDecl(org.apache.xml.utils.QName, org.apache.xalan.templates.ElemTemplateElement, org.apache.xpath.axes.LocPathIterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean isAbsolute(org.apache.xpath.axes.LocPathIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_LANG'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemUnknown void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COPY_OF_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AbsPathChecker boolean visitVariableRef(org.apache.xpath.ExpressionOwner, org.apache.xpath.operations.Variable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWithParam void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttribute org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach void setExpression(org.apache.xpath.Expression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemSort java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XUnresolvedVariable java.lang.String getTypeString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemChoose java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setBooleanProperty(org.apache.xml.utils.QName, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext, int, org.apache.xml.utils.QName, boolean, org.apache.xml.dtm.DTM) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_APPLY_IMPORTS_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExsltFunction void execute(org.apache.xalan.transformer.TransformerImpl, org.apache.xpath.objects.XObject[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_CODETYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement java.lang.String getNamespaceForPrefix(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext, java.util.Vector, org.apache.xml.dtm.DTMIterator) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartSimple void callVisitors(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExtensionCall boolean accept(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COPY_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_LETTERVALUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemText org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_PERMILLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void setPrefixes(org.xml.sax.helpers.NamespaceSupport, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_ORDER_ASCENDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TEMPLATE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_ID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttributeSet void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemChoose org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_ANY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariablePsuedo void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_EXPECTEDCHILDREN_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath AVTPartXPath(java.lang.String, org.apache.xml.utils.PrefixResolver, org.apache.xpath.compiler.XPathParser, org.apache.xpath.XPathFactory, org.apache.xpath.XPathContext) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_WITHPARAM_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COMPONENT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet void setNonXslTopLevel(org.apache.xml.utils.QName, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemComment void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.NamespaceAlias void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExtensionCall void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ANCHOR_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_IMPORTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COUNTERRESET_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber java.lang.String int2singlealphaCount(long, org.apache.xml.utils.res.CharArrayWrapper) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_XXXX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_PRIORITY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult java.lang.String getPrefix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COMMENT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemComment org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TEXT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber int getPreviousNode(org.apache.xpath.XPathContext, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTextLiteral java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemText java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DATATYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ELEMENT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_METHOD'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_INDENTRESULT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_PARAMVARIABLE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext, int, int, org.apache.xml.utils.QName, int, boolean, org.apache.xml.dtm.DTM) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TRANSFORM_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncKey org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.KeyDeclaration java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_APPLY_TEMPLATES_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_NAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCopy void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemOtherwise java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.util.Vector getQNameProperties(java.lang.String, java.util.Properties) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_URL_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.WhiteSpaceInfo void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemChoose void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DEFAULTSPACE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber void int2alphaCount(long, org.apache.xml.utils.res.CharArrayWrapper, org.apache.xml.utils.FastStringBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_OUTPUT_METHOD_XML'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate void setLocaterInfo(javax.xml.transform.SourceLocator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach void endCompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWithParam org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties int getIntProperty(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPart java.lang.String getSimpleString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncFormatNumb void warn(org.apache.xpath.XPathContext, java.lang.String, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ATTRIBUTESET_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_GROUPINGSIZE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.util.Vector getQNameProperties(java.lang.String, java.util.Properties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void setEndLocaterInfo(javax.xml.transform.SourceLocator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_DOCTYPE_SYSTEM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber void int2alphaCount(long, org.apache.xml.utils.res.CharArrayWrapper, org.apache.xml.utils.FastStringBuffer) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemValueOf void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemComment org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TARGETATTRIBUTE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_CASEORDER_LOWER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void exprAddChild(org.apache.xpath.ExpressionNode, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_USE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_TEST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperties(org.apache.xml.utils.QName, java.util.Vector) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_NUMBER_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties org.apache.xml.utils.QName getQNameProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperties(java.lang.String, java.util.Vector) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ORDER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XUnresolvedVariable org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncDocument void warn(org.apache.xpath.XPathContext, java.lang.String, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XUnresolvedVariableSimple org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable createPseudoVarDecl(org.apache.xalan.templates.ElemTemplateElement, org.apache.xpath.axes.LocPathIterator, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void copyFrom(java.util.Properties, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_DOCTYPE_PUBLIC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator int oldFindAndEliminateRedundant(int, int, org.apache.xpath.ExpressionOwner, org.apache.xalan.templates.ElemTemplateElement, java.util.Vector) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator int findAndEliminateRedundant(int, int, org.apache.xpath.ExpressionOwner, org.apache.xalan.templates.ElemTemplateElement, java.util.Vector) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemElement void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_STYLESHEET_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_ORDER_DESCENDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemParam void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties OutputProperties(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DIGITGROUPSEP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_DEFAULT_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext, int, org.apache.xml.utils.QName, boolean, org.apache.xml.dtm.DTM) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList void setTemplate(org.apache.xalan.templates.ElemTemplate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemParam void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCallTemplate void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCallTemplate org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExsltFuncResult java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute java.lang.Object getFeature(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath void fixupVariables(java.util.Vector, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void callVisitors(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_EXTENSIONHANDLER_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath void callVisitors(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyTemplates void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.LiteralElementAttributes org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWithParam java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWithParam org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVT AVT(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVT void callVisitors(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void setLocaterInfo(javax.xml.transform.SourceLocator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_ENCODING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator int oldFindAndEliminateRedundant(int, int, org.apache.xpath.ExpressionOwner, org.apache.xalan.templates.ElemTemplateElement, java.util.Vector) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.util.Properties getDefaultMethodProperties(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ELEMENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DECIMALSEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_TRADITIONAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_PI_OLD_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_INCLUDE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COUNTERSCOPE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TARGETCOMMENT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties org.apache.xml.utils.QName getQNameProperty(java.lang.String, java.util.Properties) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemPI org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_WHEN_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XSLTVisitor boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttributeSet java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemUse void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable void endCompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_STYLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemElement void setName(org.apache.xalan.templates.AVT) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_CODEBASE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_EXPR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWhen java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties org.apache.xml.utils.QName getQNameProperty(java.lang.String, java.util.Properties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemIf void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_HREF'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemParam java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XSLTVisitable void callVisitors(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_SINGLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean visitPredicate(org.apache.xpath.ExpressionOwner, org.apache.xpath.Expression) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AbsPathChecker boolean checkAbsolute(org.apache.xpath.axes.LocPathIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement java.lang.String getLocalName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants DEFAULT_DECIMAL_FORMAT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DEPTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_ALPHABETIC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.util.Vector getQNameProperties(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCopyOf void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.util.Vector getQNameProperties(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttribute java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TARGETPI_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.DecimalFormatProperties void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_NS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_DATATYPE_NUMBER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult java.lang.String getAttribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.VarNameCollector boolean visitVariableRef(org.apache.xpath.ExpressionOwner, org.apache.xpath.operations.Variable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_STRIPSPACE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_TERMINATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_FOREACH_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator int findAndEliminateRedundant(int, int, org.apache.xpath.ExpressionOwner, org.apache.xalan.templates.ElemTemplateElement, java.util.Vector) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CONSTRUCT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext, int, org.apache.xml.utils.QName, int, int, boolean, org.apache.xml.dtm.DTM) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_PATTERNSEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ARCHIVE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CHOOSE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemSort void setSelect(org.apache.xpath.XPath) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperty(org.apache.xml.utils.QName, org.apache.xml.utils.QName) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemTemplateElement getPrevElementWithinContext(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.w3c.dom.Node appendChild(org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator void diagnoseLineNumber(org.apache.xpath.Expression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_LOCALE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.RedundentExprEliminator.MultistepExprHolder matchAndEliminatePartialPaths(org.apache.xalan.templates.RedundentExprEliminator.MultistepExprHolder, org.apache.xalan.templates.RedundentExprEliminator.MultistepExprHolder, boolean, int, org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setProperty(org.apache.xml.utils.QName, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable void setParentElem(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement java.lang.String getTagName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CALL_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext, java.util.Vector, org.apache.xml.dtm.DTMIterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult void setXmlSpace(org.apache.xalan.templates.AVT) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperty(org.apache.xml.utils.QName, org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_KEY_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot javax.xml.transform.Transformer newTransformer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_IF_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExsltFunction void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_COUNT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_NAMESPACE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet boolean accept(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator void eleminateSharedPartialPaths(org.apache.xalan.templates.ElemTemplateElement, java.util.Vector) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPart void fixupVariables(java.util.Vector, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_USE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_EXTENSIONELEMENTPREFIXES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_USEATTRIBUTESETS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemMessage java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemIf void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties boolean getBooleanProperty(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XUnresolvedVariable org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ELEMENTS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_TOSTRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute void setValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants EXSLT_ELEMNAME_FUNCTION_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExsltFunction java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot StylesheetRoot(org.apache.xalan.processor.XSLTSchema, javax.xml.transform.ErrorListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator void eleminateRedundent(org.apache.xalan.templates.ElemTemplateElement, java.util.Vector) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemValueOf org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TARGETELEMENT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_INFINITY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemParam ElemParam(org.apache.xalan.templates.ElemParam) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xpath.axes.WalkingIterator createIteratorFromSteps(org.apache.xpath.axes.WalkingIterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.Node cloneNode(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCallTemplate java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable ElemVariable(org.apache.xalan.templates.ElemVariable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XUnresolvedVariableSimple org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_FORMAT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemFallback java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_STYLESHEET_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach void setSelect(org.apache.xpath.XPath) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemElement void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber java.lang.String tradAlphaCount(long, org.apache.xml.utils.res.XResourceBundle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_PARENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPart void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate void endCompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.DecimalFormatProperties java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCallTemplate org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_OUTPUT_METHOD_TEXT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncDocument org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void setParentElem(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemComment java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_PRESERVESPACE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_MEDIATYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.w3c.dom.NodeList getChildNodes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPart void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_MESSAGE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemTemplateElement getElemFromExpression(org.apache.xpath.Expression) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.LiteralElementAttributes org.w3c.dom.Node setNamedItem(org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void endCompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.util.Properties getDefaultMethodProperties(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_DECIMALFORMAT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExtensionDecl void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemPI org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncDocument void error(org.apache.xpath.XPathContext, java.lang.String, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath java.lang.String getSimpleString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_MODE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttribute void setName(org.apache.xalan.templates.AVT) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperty(java.lang.String, org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COUNTERINCREMENT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_VALUEOF_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_DATATYPE_TEXT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_LEVEL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CALLTEMPLATEARG_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach org.apache.xalan.templates.ElemTemplateElement getTemplateMatch()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemSort org.w3c.dom.Node appendChild(org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot java.text.DecimalFormatSymbols getDecimalFormatComposed(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext, int, org.apache.xml.dtm.DTM) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_GROUPINGSEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean visitLocationPath(org.apache.xpath.ExpressionOwner, org.apache.xpath.axes.LocPathIterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWithParam void setParentElem(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xpath.axes.LocPathIterator changePartToRef(org.apache.xml.utils.QName, org.apache.xpath.axes.WalkingIterator, int, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void copyFrom(java.util.Properties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemTemplateElement getElemFromExpression(org.apache.xpath.Expression)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncFormatNumb org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_TARGETTEXT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_XMLSPACE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemText org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_XMLNS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ONLY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement boolean accept(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_OTHER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet STYLESHEET_EXT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_METHOD'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyTemplates java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.lang.String getProperty(org.apache.xml.utils.QName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ANCESTOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_EXTENSION_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_AMOUNT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean stepsEqual(org.apache.xpath.axes.WalkingIterator, org.apache.xpath.axes.WalkingIterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_PERCENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties boolean getBooleanProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setProperty(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_RESULTNS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_THIS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xpath.axes.WalkingIterator createIteratorFromSteps(org.apache.xpath.axes.WalkingIterator, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setQNameProperty(java.lang.String, org.apache.xml.utils.QName) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.KeyDeclaration void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_INFINITY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator boolean stepsEqual(org.apache.xpath.axes.WalkingIterator, org.apache.xpath.axes.WalkingIterator, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_NDIGITSPERGROUP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute java.lang.Object getUserData(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartSimple void fixupVariables(java.util.Vector, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyImport void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncKey org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_ANCESTOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_RESULT_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CHILDREN_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyImport org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_PI_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_FALLBACK_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCopy java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute java.lang.Object setUserData(java.lang.String, java.lang.Object, org.w3c.dom.UserDataHandler) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_OUTPUT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCopyOf java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ANY_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_OTHERWISE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_SELECT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_IMPORT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ARG_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemPI java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCopyOf org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_CASEORDER_UPPER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncFormatNumb org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable createGlobalPseudoVarDecl(org.apache.xml.utils.QName, org.apache.xalan.templates.StylesheetRoot, org.apache.xpath.axes.LocPathIterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_SEQUENCESRC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_NSALIAS_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemMessage void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement, org.apache.xpath.axes.LocPathIterator, org.apache.xalan.templates.ElemVariable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_OUTPUT_OMITXMLDECL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement void setPrefixes(org.xml.sax.helpers.NamespaceSupport) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_CLASSID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COUNTER_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExtensionCall void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTextLiteral void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber java.lang.String int2singlealphaCount(long, org.apache.xml.utils.res.CharArrayWrapper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute org.w3c.dom.Node removeChild(org.w3c.dom.Node) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemElement java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext, int, org.apache.xml.utils.QName, int, int, boolean, org.apache.xml.dtm.DTM) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_COUNTERS_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement, org.apache.xpath.axes.LocPathIterator, org.apache.xalan.templates.ElemVariable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void setIntProperty(org.apache.xml.utils.QName, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_VARIABLE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DISABLE_OUTPUT_ESCAPING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyTemplates void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemChoose org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.RedundentExprEliminator.MultistepExprHolder createMultistepExprList(java.util.Vector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet void setLocaterInfo(javax.xml.transform.SourceLocator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemPI void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet void replaceTemplate(org.apache.xalan.templates.ElemTemplate, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber java.lang.String long2roman(long, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemSort void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_FROM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DIGIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ZERODIGIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_EMPTY_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_EXCLUDE_RESULT_PREFIXES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable boolean accept(org.apache.xalan.templates.XSLTVisitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ATTRIBUTE_SET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties java.lang.String getProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.FuncDocument org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator void changeToVarRef(org.apache.xml.utils.QName, org.apache.xpath.ExpressionOwner, java.util.Vector, org.apache.xalan.templates.ElemTemplateElement) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemNumber int getTargetNode(org.apache.xpath.XPathContext, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CALLTEMPLATE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XUnresolvedVariableSimple java.lang.String getTypeString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_DEFAULT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_SCRIPT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_NAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_SORT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet void setTemplate(org.apache.xalan.templates.ElemTemplate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_DISPLAYIF_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_CONTENTS_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplateElement int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemUse void setUseAttributeSets(java.util.Vector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemTemplate java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRVAL_OUTPUT_METHOD_HTML'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet org.apache.xalan.templates.Stylesheet getStylesheet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_EVAL_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.XSLTVisitor boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemExsltFuncResult void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath AVTPartXPath(java.lang.String, org.apache.xml.utils.PrefixResolver, org.apache.xpath.compiler.XPathParser, org.apache.xpath.XPathFactory, org.apache.xpath.XPathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants EXSLT_ELEMNAME_FUNCRESULT_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Stylesheet org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.StylesheetRoot void addImports(org.apache.xalan.templates.Stylesheet, boolean, java.util.Vector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.RedundentExprEliminator org.apache.xalan.templates.ElemVariable createGlobalPseudoVarDecl(org.apache.xml.utils.QName, org.apache.xalan.templates.StylesheetRoot, org.apache.xpath.axes.LocPathIterator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult org.w3c.dom.NamedNodeMap getAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.TemplateList org.apache.xalan.templates.TemplateList.TemplateWalker getWalker()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartSimple void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttributeSet org.apache.xalan.templates.ElemTemplateElement appendChildElem(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties boolean isLegalPropertyKey(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ELEMNAME_ATTRIBUTE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_REFID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemVariable java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_MATCH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemValueOf java.lang.String getNodeName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemApplyTemplates void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_ATTRIBUTE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemValueOf void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_XMLNSDEF'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWhen void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemLiteralResult.Attribute boolean isSupported(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemWithParam org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.AVTPartXPath void evaluate(org.apache.xpath.XPathContext, org.apache.xml.utils.FastStringBuffer, int, org.apache.xml.utils.PrefixResolver) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemAttributeSet void recompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_VALUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCallTemplate void endCompose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemFallback void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.OutputProperties void copyFrom(org.apache.xalan.templates.OutputProperties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.Constants ATTRNAME_CONDITION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemCopyOf void compose(org.apache.xalan.templates.StylesheetRoot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemForEach org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.xalan.templates.ElemPI void execute(org.apache.xalan.transformer.TransformerImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
