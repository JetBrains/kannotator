<root>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer get(float[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(int, byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putShort(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer int read(java.nio.CharBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putChar(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.lang.Appendable append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(java.nio.IntBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putFloat(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.NioUtils int unsafeArrayOffset(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.NioUtils java.io.FileDescriptor getFD(java.nio.channels.FileChannel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer get(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer get(short[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.DoubleBuffer asDoubleBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.ByteOrder order()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(java.nio.DoubleBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer get(long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(short[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(java.nio.FloatBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer order(java.nio.ByteOrder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer wrap(long[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putFloat(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer get(short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer int compareTo(java.nio.IntBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer get(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putLong(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putDouble(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer get(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(java.nio.LongBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(long[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer wrap(long[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.FloatBuffer asFloatBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer get(short[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer get(long[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteOrder java.nio.ByteOrder nativeOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer int compareTo(java.nio.LongBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer reset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ByteOrder order()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer int compareTo(java.nio.ShortBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.SelectorProviderImpl java.nio.channels.ServerSocketChannel openServerSocketChannel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(int[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(java.nio.IntBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.lang.Appendable append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.ByteOrder order()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer get(int[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer int compareTo(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer get(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putDouble(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.NioUtils byte[] unsafeArray(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ShortBuffer asShortBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(long[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(long[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.lang.Appendable append(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteOrder LITTLE_ENDIAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(java.nio.ShortBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer get(long[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer get(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer clear()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer wrap(long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.SelectorProviderImpl java.nio.channels.DatagramChannel openDatagramChannel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.SelectorProviderImpl java.nio.channels.Pipe openPipe()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(float[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer int compareTo(java.nio.FloatBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer int compareTo(java.nio.CharBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer flip()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer get(float[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(int, short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(short[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.SelectorProviderImpl java.nio.channels.SocketChannel openSocketChannel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer get(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer get(long[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.ByteOrder order()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer compact()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.nio.CharBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer rewind()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putLong(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer get(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.ByteOrder order()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.NioUtils byte[] unsafeArray(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer wrap(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer wrap(int[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteOrder BIG_ENDIAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.MappedByteBuffer java.nio.MappedByteBuffer load()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putInt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer position(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer get(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.SelectorProviderImpl java.nio.channels.spi.AbstractSelector openSelector()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer wrap(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.nio.CharBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.IntBuffer asIntBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.CharBuffer asCharBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(float[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putShort(int, short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putInt(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(short[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer asReadOnlyBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer put(java.nio.LongBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(java.nio.FloatBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer int compareTo(java.nio.DoubleBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer get(float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.LongBuffer asLongBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.LongBuffer java.nio.LongBuffer wrap(long[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer allocateDirect(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.NioUtils java.nio.channels.FileChannel newFileChannel(java.lang.Object, java.io.FileDescriptor, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.DoubleBuffer java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer put(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer put(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer get(short[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.ByteOrder order()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer slice()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer mark()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.FloatBuffer java.nio.FloatBuffer put(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer allocate(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.Buffer java.nio.Buffer limit(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer duplicate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer put(java.nio.ShortBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.IntBuffer java.nio.IntBuffer wrap(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ByteBuffer java.nio.ByteBuffer putChar(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.MappedByteBuffer java.nio.MappedByteBuffer force()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
