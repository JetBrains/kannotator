<root>
    <item name='java.security.MessageDigest java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi void engineInitSign(java.security.PrivateKey, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi byte[] engineGetEncoded(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope java.security.Identity getIdentity(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope java.security.Identity getIdentity(java.security.Principal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature boolean verify(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type SECRET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp Timestamp(java.util.Date, java.security.cert.CertPath) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature void update(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Principal java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineDeleteEntry(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi boolean engineIsKeyEntry(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope void addIdentity(java.security.Identity) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi byte[] engineSign()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi java.security.Key engineGetKey(java.lang.String, char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security int insertProviderAt(java.security.Provider, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp Timestamp(java.util.Date, java.security.cert.CertPath) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGeneratorSpi void engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController T doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity java.security.Certificate[] certificates()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestOutputStream java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.security.Provider[] getProviders(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi java.security.Key engineTranslateKey(java.security.Key)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity void addCertificate(java.security.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.CodeSource)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController T doPrivileged(java.security.PrivilegedExceptionAction&lt;T&gt;, java.security.AccessControlContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.Set&lt;java.lang.String&gt; getAlgorithms(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi java.util.Enumeration&lt;java.lang.String&gt; engineAliases()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi byte[] engineDigest()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi java.util.Date engineGetCreationDate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void putAll(java.util.Map&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi void engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore void setEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Principal java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest void update(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi java.security.cert.Certificate engineGetCertificate(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type java.security.KeyRep.Type valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.lang.String getDefaultType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore void setEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void removeService(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest boolean isEqual(byte[], byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.util.Set&lt;java.util.Map.Entry&lt;java.lang.Object,java.lang.Object&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi T engineGetParameterSpec(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject byte[] getSignature()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.security.Provider[] getProviders(java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PrivilegedExceptionAction T run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type java.security.KeyRep.Type valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSigner java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi java.lang.String engineToString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController T doPrivileged(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineStore(java.security.KeyStore.LoadStoreParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest boolean isEqual(byte[], byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject boolean verify(java.security.PublicKey, java.security.Signature) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope void removeIdentity(java.security.Identity) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestInputStream java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String getProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi void engineUpdate(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Key java.lang.String getAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi boolean engineVerify(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PermissionCollection void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature void update(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy UNSUPPORTED_EMPTY_COLLECTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom void nextBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi java.lang.Object engineGetParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type PUBLIC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.CallbackHandlerProtection javax.security.auth.callback.CallbackHandler getCallbackHandler()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSigner CodeSigner(java.security.cert.CertPath, java.security.Timestamp) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandomSpi void engineNextBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.util.Collection&lt;java.lang.Object&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController T doPrivileged(java.security.PrivilegedAction&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi boolean engineVerify(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry PrivateKeyEntry(java.security.PrivateKey, java.security.cert.Certificate[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry java.security.cert.Certificate getTrustedCertificate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi java.security.Key engineTranslateKey(java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.security.Provider.Service getService(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject SignedObject(java.io.Serializable, java.security.PrivateKey, java.security.Signature) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGeneratorSpi java.security.AlgorithmParameters engineGenerateParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandomSpi void engineSetSeed(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi void engineInit(byte[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry PrivateKeyEntry(java.security.PrivateKey, java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.ProtectionDomain)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController java.security.AccessControlContext getContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi void engineInit(java.security.spec.AlgorithmParameterSpec) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.security.Provider[] getProviders()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.security.Provider.Service getService(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController T doPrivileged(java.security.PrivilegedExceptionAction&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi void engineInit(byte[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity boolean identityEquals(java.security.Identity) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry SecretKeyEntry(javax.crypto.SecretKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactorySpi T engineGetKeySpec(java.security.Key, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineStore(java.io.OutputStream, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, java.nio.ByteBuffer, java.security.CodeSource) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security int addProvider(java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore boolean entryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParametersSpi void engineInit(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permission java.security.PermissionCollection newPermissionCollection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.CallbackHandlerProtection CallbackHandlerProtection(javax.security.auth.callback.CallbackHandler) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.util.Set&lt;java.lang.Object&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry javax.crypto.SecretKey getSecretKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry TrustedCertificateEntry(java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore boolean entryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi int engineDigest(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest int digest(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void load(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String getAttribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi void engineInitVerify(java.security.PublicKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void putService(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi boolean engineIsCertificateEntry(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature void initVerify(java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signer void setKeyPair(java.security.KeyPair) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope java.util.Enumeration&lt;java.security.Identity&gt; identities()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController T doPrivilegedWithCombiner(java.security.PrivilegedAction&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandomSpi byte[] engineGenerateSeed(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi void engineInitSign(java.security.PrivateKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGeneratorSpi void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestOutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi void engineUpdate(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest byte[] digest(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi void engineUpdate(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature int sign(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore.Entry getEntry(java.lang.String, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi boolean engineContainsAlias(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest void update(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type PRIVATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
