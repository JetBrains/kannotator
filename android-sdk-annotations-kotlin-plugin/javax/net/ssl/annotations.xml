<root>
    <item name='javax.net.ssl.SSLEngineResult.Status BUFFER_OVERFLOW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSession java.lang.Object getValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext void setDefault(javax.net.ssl.SSLContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory java.lang.String getDefaultAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket java.lang.String[] getSupportedProtocols()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocketFactory java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket javax.net.ssl.SSLParameters getSSLParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContextSpi javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContextSpi javax.net.ssl.SSLEngine engineCreateSSLEngine()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSessionBindingEvent SSLSessionBindingEvent(javax.net.ssl.SSLSession, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.X509TrustManager void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContextSpi javax.net.ssl.SSLParameters engineGetDefaultSSLParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocketFactory java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus javax.net.ssl.SSLEngineResult.HandshakeStatus valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus NEED_WRAP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.HttpsURLConnection void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.DistinguishedNameParser DistinguishedNameParser(javax.security.auth.x500.X500Principal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContextSpi javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocketFactory java.lang.String[] getDefaultCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.Status javax.net.ssl.SSLEngineResult.Status valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSession void putValue(java.lang.String, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory java.lang.String getDefaultAlgorithm()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.CertPathTrustManagerParameters CertPathTrustManagerParameters(java.security.cert.CertPathParameters) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine javax.net.ssl.SSLParameters getSSLParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.HttpsURLConnection void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.X509TrustManager void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine void setSSLParameters(javax.net.ssl.SSLParameters) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus FINISHED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.security.KeyStore.Builder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult javax.net.ssl.SSLEngineResult.Status getStatus()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.HttpsURLConnection void setHostnameVerifier(javax.net.ssl.HostnameVerifier) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSession void putValue(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLParameters getDefaultSSLParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.X509TrustManager void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLServerSocketFactory java.lang.String[] getDefaultCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocketFactory java.lang.String[] getSupportedCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLServerSocket java.lang.String[] getSupportedProtocols()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.Status OK'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyStoreBuilderParameters java.util.List&lt;java.security.KeyStore.Builder&gt; getParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLParameters getSupportedSSLParameters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSession void removeValue(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.Status javax.net.ssl.SSLEngineResult.Status valueOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSession javax.security.cert.X509Certificate[] getPeerCertificateChain()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSocket void setSSLParameters(javax.net.ssl.SSLParameters) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.DefaultHostnameVerifier boolean verify(java.lang.String, java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus NEED_TASK'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.HttpsURLConnection void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.HandshakeCompletedEvent HandshakeCompletedEvent(javax.net.ssl.SSLSocket, javax.net.ssl.SSLSession) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContextSpi javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.util.List&lt;java.security.KeyStore.Builder&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.Status BUFFER_UNDERFLOW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSessionContext javax.net.ssl.SSLSession getSession(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus NOT_HANDSHAKING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.X509TrustManager void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.HandshakeStatus NEED_UNWRAP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContextSpi javax.net.ssl.SSLSocketFactory engineGetSocketFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngineResult.Status CLOSED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactorySpi javax.net.ssl.KeyManager[] engineGetKeyManagers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLServerSocketFactory java.lang.String[] getSupportedCipherSuites()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLEngine void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLServerSocket void setEnabledProtocols(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLSessionContext java.util.Enumeration&lt;byte[]&gt; getIds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.TrustManagerFactorySpi javax.net.ssl.TrustManager[] engineGetTrustManagers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.SSLServerSocket void setEnabledCipherSuites(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
