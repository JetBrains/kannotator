<root>
  <!-- java.math.BigInteger -->
  <item name='java.math.BigInteger BigInteger(int, byte[]) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger BigInteger(java.lang.String, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger BigInteger(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger BigInteger(int, java.util.Random) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger BigInteger(int, int, java.util.Random) 2'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger probablePrime(int, java.util.Random) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger probablePrime(int, java.util.Random)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger nextProbablePrime()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger valueOf(long)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger ZERO'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger ONE'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger TEN'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger add(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger add(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger subtract(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger subtract(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger multiply(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger multiply(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger divide(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger divide(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger[] divideAndRemainder(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger remainder(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger remainder(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger pow(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger gcd(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger gcd(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger abs()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger negate()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger mod(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger mod(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger modInverse(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger modInverse(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger shiftLeft(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger shiftRight(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger and(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger and(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger or(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger or(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger xor(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger xor(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger not()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger andNot(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger andNot(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger setBit(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger clearBit(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger flipBit(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger int compareTo(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger boolean equals(java.lang.Object) 0'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger min(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger min(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger max(java.math.BigInteger)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger max(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.lang.String toString(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.lang.String toString()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger byte[] toByteArray()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigInteger java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)'>
    <annotation name='jet.runtime.typeinfo.KotlinSignature'>
      <val name="value"
           val="&quot;fun divideAndRemainder(val value: BigInteger) : Array&lt;BigInteger&gt;&quot;"/>
    </annotation>
  </item>
  <!-- java.math.BigDecimal -->
  <item name='java.math.BigDecimal ONE'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal TEN'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(char[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(char[], int, int, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(char[], int, int, java.math.MathContext) 3'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(char[]) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(char[], java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(char[], java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.lang.String, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.lang.String, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(double, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, int, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, int, java.math.MathContext) 2'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(int, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal BigDecimal(long, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal valueOf(long, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal valueOf(long)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal valueOf(double)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, java.math.RoundingMode)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, java.math.RoundingMode) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, java.math.RoundingMode) 2'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.RoundingMode) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.RoundingMode) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='jet.runtime.typeinfo.KotlinSignature'>
      <val name="value"
           val="&quot;fun divideAndRemainder(divisor : BigDecimal) : Array&lt;out BigDecimal&gt;&quot;"/>
    </annotation>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
    <annotation name='jet.runtime.typeinfo.KotlinSignature'>
      <val name="value"
           val="&quot;fun divideAndRemainder(divisor : BigDecimal, mc : MathContext) : Array&lt;out BigDecimal&gt;&quot;"/>
    </annotation>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal, java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal pow(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal pow(int, java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal pow(int, java.math.MathContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal abs()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal abs(java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal abs(java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal negate()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal negate(java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal negate(java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal plus()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal plus(java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal plus(java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigInteger unscaledValue()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal round(java.math.MathContext)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal round(java.math.MathContext) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal setScale(int, java.math.RoundingMode)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal setScale(int, java.math.RoundingMode) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal setScale(int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal movePointLeft(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal movePointRight(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal scaleByPowerOfTen(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal stripTrailingZeros()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal int compareTo(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal boolean equals(java.lang.Object) 0'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal min(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal min(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal max(java.math.BigDecimal)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal max(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.lang.String toString()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.lang.String toEngineeringString()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.lang.String toPlainString()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigInteger toBigInteger()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigInteger toBigIntegerExact()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal.LongOverflow void check(java.math.BigDecimal) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.BigDecimal java.math.BigDecimal ulp()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <!-- java.math.MathContext -->
  <item name='java.math.MathContext UNLIMITED'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext DECIMAL32'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext DECIMAL64'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext DECIMAL128'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext MathContext(int, java.math.RoundingMode) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext MathContext(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext java.math.RoundingMode getRoundingMode()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.math.MathContext boolean equals(java.lang.Object) 0'>
    <annotation name='org.jetbrains.annotations.Nullable'/>
  </item>
  <item name='java.math.MathContext java.lang.String toString()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <!-- java.math.RoundingMode -->
  <item name='java.math.RoundingMode java.math.RoundingMode valueOf(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
</root>